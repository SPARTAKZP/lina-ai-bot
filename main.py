import logging
import asyncio
from fastapi import FastAPI, Request
from telegram import Update, Bot
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
import uvicorn

BOT_TOKEN = "8073520703:AAGVMWj0ayOSY85LfIgQWFEKnY9e6cALVWE"
BASE_URL = "https://lina-ai-bot.up.railway.app"
WEBHOOK_PATH = "/webhook/8073520703:AAGVMWj0ayOSY85LfIgQWFEKnY9e6cALVWE"

logging.basicConfig(level=logging.DEBUG)

bot = Bot(token=BOT_TOKEN)
app = FastAPI()
application = Application.builder().token(BOT_TOKEN).build()

@app.get("/")
async def root():
    return {"status": "Lina is alive"}

# === –ö–æ–º–∞–Ω–¥—ã ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logging.info(f"[START] {update.effective_user.id}")
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, —è –õ–∏–Ω–∞. –Ø —Å–ª—É—à–∞—é —Ç–µ–±—è...")

async def voice_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logging.info(f"[VOICE] {update.effective_user.id}")
    await update.message.reply_text("–ú–º–º... –ª—é–±–ª—é —Ç–≤–æ–π –≥–æ–ª–æ—Å. (—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç)")

async def text_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text
    logging.info(f"[TEXT] {update.effective_user.id}: {user_text}")
    await update.message.reply_text(f"–¢—ã —Å–∫–∞–∑–∞–ª: ¬´{user_text}¬ª. –•–æ—á–µ—à—å, —è —Å–∫–∞–∂—É —Ç–µ–±–µ –∫–æ–µ-—á—Ç–æ –Ω–µ–ø—Ä–∏–ª–∏—á–Ω–æ–µ?..")

application.add_handler(CommandHandler("start", start))
application.add_handler(MessageHandler(filters.VOICE, voice_handler))
application.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), text_handler))

# === WEBHOOK ===
@app.post("/webhook/8073520703:AAGVMWj0ayOSY85LfIgQWFEKnY9e6cALVWE")
async def telegram_webhook(request: Request):
    data = await request.json()
    print("üì© –ü—Ä–∏—à–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram!")
    update = Update.de_json(data, bot)
    await application.process_update(update)
    return {"ok": True}

# === –°—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Webhook ===
@app.on_event("startup")
async def on_startup():
    await asyncio.sleep(2)
    await bot.set_webhook(f"{BASE_URL}{WEBHOOK_PATH}")
    print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {BASE_URL}{WEBHOOK_PATH}")

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)
